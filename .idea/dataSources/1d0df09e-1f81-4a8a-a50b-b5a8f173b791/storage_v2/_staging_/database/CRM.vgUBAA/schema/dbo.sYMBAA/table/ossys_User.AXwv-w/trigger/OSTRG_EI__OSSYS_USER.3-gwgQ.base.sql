CREATE TRIGGER [OSTRG_EI__OSSYS_USER] ON [dbo].[ossys_User] AFTER INSERT, UPDATE AS BEGIN DECLARE @isupdate BIT; SET @isupdate=1; IF (SELECT COUNT(1) FROM deleted)=0 SET @isupdate=0; INSERT INTO OSSYS_BPM_EVENT_QUEUE(ESPACE_ID, TENANT_ID, ACTIVITY_ID, PROCESS_DEF_ID, DATA_ID, ENQUEUE_TIME, ERROR_COUNT, NEXT_RUN) (SELECT [_ESPACE_ID], COALESCE([_TENANT_ID], inserted.[TENANT_ID]), [_ACTIVITY_ID], [_PROCESS_DEF_ID], convert(varchar(11), inserted.[ID]), GETDATE(), 0, GETDATE() FROM [OSEVT_USER] evt, inserted WHERE evt.[_IS_UPDATE] = @isupdate AND evt.[_IS_LIGHT] = 0 AND (NULLIF(evt.[TENANT_ID], 0) IS NULL OR evt.[TENANT_ID] = COALESCE(inserted.[TENANT_ID], 0)) AND (evt.[ID] IS NULL OR evt.[ID] = inserted.[ID])); INSERT INTO OSSYS_BPM_EVENT(ESPACE_ID, TENANT_ID, ACTIVITY_ID, PROCESS_DEF_ID, ENTITY_RECORD_ID, ENQUEUE_TIME, ERROR_COUNT, NEXT_RUN) (SELECT [_ESPACE_ID], COALESCE([_TENANT_ID], inserted.[TENANT_ID]), [_ACTIVITY_ID], [_PROCESS_DEF_ID], convert(varchar(11), inserted.[ID]), GETDATE(), 0, GETDATE() FROM [OSEVT_USER] evt, inserted WHERE evt.[_IS_UPDATE] = @isupdate AND evt.[_IS_LIGHT] = 1 AND (NULLIF(evt.[TENANT_ID], 0) IS NULL OR evt.[TENANT_ID] = COALESCE(inserted.[TENANT_ID], 0)) AND (evt.[ID] IS NULL OR evt.[ID] = inserted.[ID]));; END
GO

